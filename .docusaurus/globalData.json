{
  "docusaurus-theme-redoc": {
    "theme-redoc": {
      "lightTheme": {
        "typography": {
          "fontFamily": "var(--ifm-font-family-base)",
          "fontSize": "var(--ifm-font-size-base)",
          "lineHeight": "var(--ifm-line-height-base)",
          "fontWeightLight": "var(--ifm-font-weight-light)",
          "fontWeightRegular": "var(--ifm-font-weight-base)",
          "fontWeightBold": "var(--ifm-font-weight-bold)",
          "headings": {
            "fontFamily": "var(--ifm-heading-font-family)",
            "fontWeight": "var(--ifm-heading-font-weight)",
            "lineHeight": "var(--ifm-heading-line-height)"
          },
          "code": {
            "fontFamily": "var(--ifm-font-family-monospace)",
            "lineHeight": "var(--ifm-pre-line-height)"
          }
        },
        "sidebar": {
          "width": "300px",
          "backgroundColor": "#ffffff"
        },
        "rightPanel": {
          "backgroundColor": "#303846"
        },
        "colors": {
          "primary": {
            "main": "#4945FF"
          }
        },
        "theme": {
          "prism": {
            "additionalLanguages": [
              "scala"
            ]
          }
        }
      },
      "darkTheme": {
        "typography": {
          "fontFamily": "var(--ifm-font-family-base)",
          "fontSize": "var(--ifm-font-size-base)",
          "lineHeight": "var(--ifm-line-height-base)",
          "fontWeightLight": "var(--ifm-font-weight-light)",
          "fontWeightRegular": "var(--ifm-font-weight-base)",
          "fontWeightBold": "var(--ifm-font-weight-bold)",
          "headings": {
            "fontFamily": "var(--ifm-heading-font-family)",
            "fontWeight": "var(--ifm-heading-font-weight)",
            "lineHeight": "var(--ifm-heading-line-height)"
          },
          "code": {
            "fontFamily": "var(--ifm-font-family-monospace)",
            "lineHeight": "var(--ifm-pre-line-height)"
          }
        },
        "sidebar": {
          "width": "300px",
          "backgroundColor": "rgb(24, 25, 26)",
          "textColor": "#f5f6f7",
          "arrow": {
            "color": "#f5f6f7"
          }
        },
        "colors": {
          "text": {
            "primary": "#f5f6f7",
            "secondary": "rgba(255, 255, 255, 1)"
          },
          "gray": {
            "50": "#FAFAFA",
            "100": "#F5F5F5"
          },
          "border": {
            "dark": "#ffffff",
            "light": "rgba(0,0,0, 0.1)"
          },
          "primary": {
            "main": "#4945FF"
          }
        },
        "schema": {
          "nestedBackground": "rgb(24, 25, 26)",
          "typeNameColor": "rgba(255, 255, 255, 1)",
          "typeTitleColor": "rgba(255, 255, 255, 1)"
        },
        "theme": {
          "prism": {
            "additionalLanguages": [
              "scala"
            ]
          }
        }
      },
      "options": {
        "scrollYOffset": "nav.navbar",
        "expandSingleSchemaField": true,
        "menuToggle": true,
        "suppressWarnings": true
      }
    }
  },
  "@cmfcmf/docusaurus-search-local": {
    "default": {
      "titleBoost": 5,
      "contentBoost": 1,
      "tagsBoost": 3,
      "parentCategoriesBoost": 2,
      "indexDocSidebarParentCategories": 0,
      "maxSearchResults": 8
    }
  },
  "docusaurus-plugin-redoc": {
    "plugin-redoc-0": {
      "url": "redocusaurus/plugin-redoc-0.yaml",
      "themeId": "theme-redoc",
      "isSpecFile": true,
      "spec": {
        "openapi": "3.0.0",
        "info": {
          "title": "Strapi REST API",
          "description": "The REST API allows accessing the content-types through API endpoints. Strapi automatically creates API endpoints when a content-type is created. API parameters can be used when querying API endpoints to refine the results.\n",
          "version": "4.3.9"
        },
        "servers": [
          {
            "url": "https://localhost:1337/api",
            "variables": {
              "environment": {
                "default": "api",
                "enum": [
                  "api",
                  "api.dev",
                  "api.staging"
                ]
              },
              "protocol": {
                "default": "https",
                "enum": [
                  "http",
                  "https"
                ]
              }
            }
          }
        ],
        "paths": {
          "/api/:pluralposts/{pluralApiId}": {
            "get": {
              "tags": [
                "Posts"
              ],
              "summary": "Return a post",
              "description": "Return a post with postId equals to id.",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The postId requested by user.",
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "A blog posts in JSON format",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Entry"
                      }
                    }
                  }
                }
              }
            },
            "put": {
              "tags": [
                "Posts"
              ],
              "summary": "Update a post",
              "description": "A  complete replacement of a post with id.",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The postId requested by user.",
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Entry"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Updated the post completely."
                }
              }
            },
            "patch": {
              "tags": [
                "Posts"
              ],
              "summary": "Update a post",
              "description": "Update the post with id partially.",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The postId requested by user.",
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PatchPost"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Updated the post partially."
                }
              }
            },
            "delete": {
              "tags": [
                "Posts"
              ],
              "summary": "Deletes a post",
              "description": "Deletes the post with id.",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The postId requested by user.",
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "204": {
                  "description": "The resource was deleted successfully."
                }
              }
            }
          },
          "/comments": {
            "get": {
              "tags": [
                "Comments"
              ],
              "summary": "Return comments",
              "description": "Return comments on a post with postId={id}.",
              "parameters": [
                {
                  "in": "query",
                  "name": "postId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "The postId which we want the comments"
                }
              ],
              "responses": {
                "200": {
                  "description": "A list of comments JSON format",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Comments"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "components": {
          "schemas": {
            "Entries": {
              "description": "An array of post objects.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Entry"
              },
              "example": [
                {
                  "userId": 1,
                  "id": 1,
                  "title": "First post",
                  "body": "This is the first post body."
                },
                {
                  "userId": 1,
                  "id": 2,
                  "title": "Second post",
                  "body": "The second post content."
                },
                {
                  "userId": 1,
                  "id": 3,
                  "title": "Another post",
                  "body": "Other post content"
                }
              ]
            },
            "Entry": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The post id."
                },
                "userId": {
                  "type": "string",
                  "description": "The post userId."
                },
                "title": {
                  "type": "string",
                  "description": "The title of the post"
                },
                "body": {
                  "type": "string",
                  "description": "The body content of the post"
                }
              },
              "required": [
                "id",
                "userId",
                "title",
                "body"
              ],
              "example": {
                "userId": 1,
                "id": 1,
                "title": "The First Post",
                "body": "we are building a blog post API using OpenAPI Specification."
              }
            },
            "PatchPost": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The post id."
                },
                "userId": {
                  "type": "string",
                  "description": "The post userId."
                },
                "title": {
                  "type": "string",
                  "description": "The title of the post"
                },
                "body": {
                  "type": "string",
                  "description": "The body content of the post"
                }
              }
            },
            "Comments": {
              "description": "The array of comment objects",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Comment"
              },
              "example": [
                {
                  "postId": 1,
                  "id": 1,
                  "name": "id labore ex et quam laborum",
                  "email": "Eliseo@gardner.biz",
                  "body": "laudantium enim quasi est quidem magnam voluptate"
                },
                {
                  "postId": 1,
                  "id": 2,
                  "name": "quo vero reiciendis velit similique earum",
                  "email": "Jayne_Kuhic@sydney.com",
                  "body": "est natus enim nihil est dolore omnis voluptatem"
                },
                {
                  "postId": 1,
                  "id": 3,
                  "name": "odio adipisci rerum aut animi",
                  "email": "Nikita@garfield.biz",
                  "body": "quia molestiae reprehenderit quasi aspernatur"
                }
              ]
            },
            "Comment": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The comment id."
                },
                "postId": {
                  "type": "string",
                  "description": "The comment postId."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the comment."
                },
                "email": {
                  "type": "string",
                  "description": "The email of the user who posted the comment."
                },
                "body": {
                  "type": "string",
                  "description": "The comment body."
                }
              },
              "example": {
                "id": 1,
                "postId": 1,
                "name": "The first comment",
                "email": "example@example.com",
                "body": "This is the first comment!"
              }
            }
          }
        }
      }
    }
  },
  "docusaurus-plugin-content-docs": {
    "default": {
      "path": "/docs",
      "versions": [
        {
          "name": "current",
          "label": "Next",
          "isLast": false,
          "path": "/docs/next",
          "mainDocId": "hello",
          "docs": [
            {
              "id": "dev-docs/api/admin-panel-api",
              "path": "/docs/next/dev-docs/api/admin-panel-api",
              "sidebar": "devDocsSidebar"
            },
            {
              "id": "dev-docs/development/backend-customization/controllers",
              "path": "/docs/next/dev-docs/development/backend-customization/controllers",
              "sidebar": "devDocsSidebar"
            },
            {
              "id": "dev-docs/development/backend-customization/middlewares",
              "path": "/docs/next/dev-docs/development/backend-customization/middlewares",
              "sidebar": "devDocsSidebar"
            },
            {
              "id": "hello",
              "path": "/docs/next/hello",
              "sidebar": "devDocsSidebar"
            },
            {
              "id": "user-docs/content-types-builder/configuring-fields-content-type",
              "path": "/docs/next/user-docs/content-types-builder/configuring-fields-content-type",
              "sidebar": "userDocsSidebar"
            },
            {
              "id": "user-docs/content-types-builder/creating-new-content-type",
              "path": "/docs/next/user-docs/content-types-builder/creating-new-content-type",
              "sidebar": "userDocsSidebar"
            },
            {
              "id": "user-docs/content-types-builder/introduction-to-content-types-builder",
              "path": "/docs/next/user-docs/content-types-builder/introduction-to-content-types-builder",
              "sidebar": "userDocsSidebar"
            },
            {
              "id": "user-docs/content-types-builder/managing-content-types",
              "path": "/docs/next/user-docs/content-types-builder/managing-content-types",
              "sidebar": "userDocsSidebar"
            },
            {
              "id": "user-docs/intro",
              "path": "/docs/next/user-docs/intro",
              "sidebar": "userDocsSidebar"
            }
          ],
          "draftIds": [],
          "sidebars": {
            "devDocsSidebar": {
              "link": {
                "path": "/docs/next/hello",
                "label": "hello"
              }
            },
            "userDocsSidebar": {
              "link": {
                "path": "/docs/next/user-docs/intro",
                "label": "user-docs/intro"
              }
            }
          }
        },
        {
          "name": "0.1.0",
          "label": "0.1.0",
          "isLast": true,
          "path": "/docs",
          "mainDocId": "hello",
          "docs": [
            {
              "id": "dev-docs/api/admin-panel-api",
              "path": "/docs/dev-docs/api/admin-panel-api",
              "sidebar": "devDocsSidebar"
            },
            {
              "id": "dev-docs/development/backend-customization/controllers",
              "path": "/docs/dev-docs/development/backend-customization/controllers",
              "sidebar": "devDocsSidebar"
            },
            {
              "id": "dev-docs/development/backend-customization/middlewares",
              "path": "/docs/dev-docs/development/backend-customization/middlewares",
              "sidebar": "devDocsSidebar"
            },
            {
              "id": "hello",
              "path": "/docs/hello",
              "sidebar": "devDocsSidebar"
            },
            {
              "id": "user-docs/content-types-builder/configuring-fields-content-type",
              "path": "/docs/user-docs/content-types-builder/configuring-fields-content-type",
              "sidebar": "userDocsSidebar"
            },
            {
              "id": "user-docs/content-types-builder/creating-new-content-type",
              "path": "/docs/user-docs/content-types-builder/creating-new-content-type",
              "sidebar": "userDocsSidebar"
            },
            {
              "id": "user-docs/content-types-builder/introduction-to-content-types-builder",
              "path": "/docs/user-docs/content-types-builder/introduction-to-content-types-builder",
              "sidebar": "userDocsSidebar"
            },
            {
              "id": "user-docs/content-types-builder/managing-content-types",
              "path": "/docs/user-docs/content-types-builder/managing-content-types",
              "sidebar": "userDocsSidebar"
            },
            {
              "id": "user-docs/intro",
              "path": "/docs/user-docs/intro",
              "sidebar": "userDocsSidebar"
            }
          ],
          "draftIds": [],
          "sidebars": {
            "devDocsSidebar": {
              "link": {
                "path": "/docs/hello",
                "label": "hello"
              }
            },
            "userDocsSidebar": {
              "link": {
                "path": "/docs/user-docs/intro",
                "label": "user-docs/intro"
              }
            }
          }
        }
      ],
      "breadcrumbs": true
    }
  }
}